Gramatika

    0 $accept: program $end

    1 $@1: /* prazno */

    2 $@2: /* prazno */

    3 program: $@1 classes_list $@2 function_list

    4 classes_list: /* prazno */
    5             | classes_existing_list

    6 classes_existing_list: class
    7                      | classes_existing_list class

    8 $@3: /* prazno */

    9 $@4: /* prazno */

   10 class: _CLASS _ID $@3 _LBRACKET attributes_list constructor $@4 functions_list _RBRACKET

   11 attributes_list: /* prazno */
   12                | attributes_list attribute

   13 $@5: /* prazno */

   14 attribute: _TYPE _ID $@5 _SEMICOLON

   15 functions_list: /* prazno */
   16               | function_list

   17 function_list: function
   18              | function_list function

   19 $@6: /* prazno */

   20 $@7: /* prazno */

   21 constructor: _ID $@6 _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list $@7 _RBRACKET

   22 constructor_parameters: /* prazno */
   23                       | constructor_existing_parameters

   24 constructor_existing_parameters: constructor_parameter
   25                                | constructor_existing_parameters _COMMA constructor_parameter

   26 constructor_parameter: _TYPE _ID

   27 attribute_assign_list: /* prazno */
   28                      | attribute_assign_list attribute_assign

   29 attribute_assign: _ID _ASSIGN _ID _SEMICOLON

   30 $@8: /* prazno */

   31 function: _TYPE _ID $@8 _LPAREN parameter _RPAREN body

   32 parameter: /* prazno */
   33          | _TYPE _ID

   34 $@9: /* prazno */

   35 body: _LBRACKET variable_list $@9 statement_list _RBRACKET

   36 variable_list: /* prazno */
   37              | variable_list variable

   38 variable: _TYPE _ID _SEMICOLON

   39 statement_list: /* prazno */
   40               | statement_list statement

   41 statement: compound_statement
   42          | assignment_statement
   43          | if_statement
   44          | class_declaration
   45          | return_statement

   46 $@10: /* prazno */

   47 $@11: /* prazno */

   48 $@12: /* prazno */

   49 $@13: /* prazno */

   50 $@14: /* prazno */

   51 class_declaration: _CLASS _ID $@10 _ID $@11 _ASSIGN _NEW _ID $@12 _LPAREN $@13 class_argument_list $@14 _RPAREN _SEMICOLON

   52 class_argument_list: /* prazno */
   53                    | class_arguments

   54 class_arguments: class_argument
   55                | class_arguments _COMMA class_argument

   56 class_argument: num_exp

   57 compound_statement: _LBRACKET statement_list _RBRACKET

   58 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   59 num_exp: exp
   60        | num_exp _AROP exp

   61 exp: literal
   62    | _ID _DOT function_call
   63    | _ID
   64    | function_call
   65    | _LPAREN num_exp _RPAREN

   66 literal: _INT_NUMBER
   67        | _UINT_NUMBER

   68 $@15: /* prazno */

   69 function_call: _ID $@15 _LPAREN argument _RPAREN

   70 argument: /* prazno */
   71         | num_exp

   72 if_statement: if_part
   73             | if_part _ELSE statement

   74 @16: /* prazno */

   75 $@17: /* prazno */

   76 if_part: _IF _LPAREN @16 rel_exp $@17 _RPAREN statement

   77 rel_exp: num_exp _RELOP num_exp

   78 return_statement: _RETURN num_exp _SEMICOLON


Završni znakovi, sa pravilima gdje se pojavljuju

$end (0) 0
error (256)
_TYPE (258) 14 26 31 33 38
_IF (259) 76
_ELSE (260) 73
_RETURN (261) 78
_CLASS (262) 10 51
_NEW (263) 51
_ID (264) 10 14 21 26 29 31 33 38 51 58 62 63 69
_INT_NUMBER (265) 66
_UINT_NUMBER (266) 67
_LPAREN (267) 21 31 51 65 69 76
_RPAREN (268) 21 31 51 65 69 76
_LBRACKET (269) 10 21 35 57
_RBRACKET (270) 10 21 35 57
_ASSIGN (271) 29 51 58
_SEMICOLON (272) 14 29 38 51 58 78
_DOT (273) 62
_COMMA (274) 25 55
_AROP (275) 60
_RELOP (276) 77
ONLY_IF (277)


Nezavršni znakovi, sa pravilima gdje se pojavljuju

$accept (23)
   s lijeva: 0
program (24)
   s lijeva: 3,s desna: 0
$@1 (25)
   s lijeva: 1,s desna: 3
$@2 (26)
   s lijeva: 2,s desna: 3
classes_list (27)
   s lijeva: 4 5,s desna: 3
classes_existing_list (28)
   s lijeva: 6 7,s desna: 5 7
class (29)
   s lijeva: 10,s desna: 6 7
$@3 (30)
   s lijeva: 8,s desna: 10
$@4 (31)
   s lijeva: 9,s desna: 10
attributes_list (32)
   s lijeva: 11 12,s desna: 10 12
attribute (33)
   s lijeva: 14,s desna: 12
$@5 (34)
   s lijeva: 13,s desna: 14
functions_list (35)
   s lijeva: 15 16,s desna: 10
function_list (36)
   s lijeva: 17 18,s desna: 3 16 18
constructor (37)
   s lijeva: 21,s desna: 10
$@6 (38)
   s lijeva: 19,s desna: 21
$@7 (39)
   s lijeva: 20,s desna: 21
constructor_parameters (40)
   s lijeva: 22 23,s desna: 21
constructor_existing_parameters (41)
   s lijeva: 24 25,s desna: 23 25
constructor_parameter (42)
   s lijeva: 26,s desna: 24 25
attribute_assign_list (43)
   s lijeva: 27 28,s desna: 21 28
attribute_assign (44)
   s lijeva: 29,s desna: 28
function (45)
   s lijeva: 31,s desna: 17 18
$@8 (46)
   s lijeva: 30,s desna: 31
parameter (47)
   s lijeva: 32 33,s desna: 31
body (48)
   s lijeva: 35,s desna: 31
$@9 (49)
   s lijeva: 34,s desna: 35
variable_list (50)
   s lijeva: 36 37,s desna: 35 37
variable (51)
   s lijeva: 38,s desna: 37
statement_list (52)
   s lijeva: 39 40,s desna: 35 40 57
statement (53)
   s lijeva: 41 42 43 44 45,s desna: 40 73 76
class_declaration (54)
   s lijeva: 51,s desna: 44
$@10 (55)
   s lijeva: 46,s desna: 51
$@11 (56)
   s lijeva: 47,s desna: 51
$@12 (57)
   s lijeva: 48,s desna: 51
$@13 (58)
   s lijeva: 49,s desna: 51
$@14 (59)
   s lijeva: 50,s desna: 51
class_argument_list (60)
   s lijeva: 52 53,s desna: 51
class_arguments (61)
   s lijeva: 54 55,s desna: 53 55
class_argument (62)
   s lijeva: 56,s desna: 54 55
compound_statement (63)
   s lijeva: 57,s desna: 41
assignment_statement (64)
   s lijeva: 58,s desna: 42
num_exp (65)
   s lijeva: 59 60,s desna: 56 58 60 65 71 77 78
exp (66)
   s lijeva: 61 62 63 64 65,s desna: 59 60
literal (67)
   s lijeva: 66 67,s desna: 61
function_call (68)
   s lijeva: 69,s desna: 62 64
$@15 (69)
   s lijeva: 68,s desna: 69
argument (70)
   s lijeva: 70 71,s desna: 69
if_statement (71)
   s lijeva: 72 73,s desna: 43
if_part (72)
   s lijeva: 76,s desna: 72 73
@16 (73)
   s lijeva: 74,s desna: 76
$@17 (74)
   s lijeva: 75,s desna: 76
rel_exp (75)
   s lijeva: 77,s desna: 76
return_statement (76)
   s lijeva: 78,s desna: 45


stanje 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


stanje 1

    0 $accept: program . $end

    $end  shift, and go to state 3


stanje 2

    3 program: $@1 . classes_list $@2 function_list

    _CLASS  shift, and go to state 4

    $default  reduce using rule 4 (classes_list)

    classes_list           go to state 5
    classes_existing_list  go to state 6
    class                  go to state 7


stanje 3

    0 $accept: program $end .

    $default  accept


stanje 4

   10 class: _CLASS . _ID $@3 _LBRACKET attributes_list constructor $@4 functions_list _RBRACKET

    _ID  shift, and go to state 8


stanje 5

    3 program: $@1 classes_list . $@2 function_list

    $default  reduce using rule 2 ($@2)

    $@2  go to state 9


stanje 6

    5 classes_list: classes_existing_list .
    7 classes_existing_list: classes_existing_list . class

    _CLASS  shift, and go to state 4

    $default  reduce using rule 5 (classes_list)

    class  go to state 10


stanje 7

    6 classes_existing_list: class .

    $default  reduce using rule 6 (classes_existing_list)


stanje 8

   10 class: _CLASS _ID . $@3 _LBRACKET attributes_list constructor $@4 functions_list _RBRACKET

    $default  reduce using rule 8 ($@3)

    $@3  go to state 11


stanje 9

    3 program: $@1 classes_list $@2 . function_list

    _TYPE  shift, and go to state 12

    function_list  go to state 13
    function       go to state 14


stanje 10

    7 classes_existing_list: classes_existing_list class .

    $default  reduce using rule 7 (classes_existing_list)


stanje 11

   10 class: _CLASS _ID $@3 . _LBRACKET attributes_list constructor $@4 functions_list _RBRACKET

    _LBRACKET  shift, and go to state 15


stanje 12

   31 function: _TYPE . _ID $@8 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 16


stanje 13

    3 program: $@1 classes_list $@2 function_list .
   18 function_list: function_list . function

    _TYPE  shift, and go to state 12

    $default  reduce using rule 3 (program)

    function  go to state 17


stanje 14

   17 function_list: function .

    $default  reduce using rule 17 (function_list)


stanje 15

   10 class: _CLASS _ID $@3 _LBRACKET . attributes_list constructor $@4 functions_list _RBRACKET

    $default  reduce using rule 11 (attributes_list)

    attributes_list  go to state 18


stanje 16

   31 function: _TYPE _ID . $@8 _LPAREN parameter _RPAREN body

    $default  reduce using rule 30 ($@8)

    $@8  go to state 19


stanje 17

   18 function_list: function_list function .

    $default  reduce using rule 18 (function_list)


stanje 18

   10 class: _CLASS _ID $@3 _LBRACKET attributes_list . constructor $@4 functions_list _RBRACKET
   12 attributes_list: attributes_list . attribute

    _TYPE  shift, and go to state 20
    _ID    shift, and go to state 21

    attribute    go to state 22
    constructor  go to state 23


stanje 19

   31 function: _TYPE _ID $@8 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 24


stanje 20

   14 attribute: _TYPE . _ID $@5 _SEMICOLON

    _ID  shift, and go to state 25


stanje 21

   21 constructor: _ID . $@6 _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list $@7 _RBRACKET

    $default  reduce using rule 19 ($@6)

    $@6  go to state 26


stanje 22

   12 attributes_list: attributes_list attribute .

    $default  reduce using rule 12 (attributes_list)


stanje 23

   10 class: _CLASS _ID $@3 _LBRACKET attributes_list constructor . $@4 functions_list _RBRACKET

    $default  reduce using rule 9 ($@4)

    $@4  go to state 27


stanje 24

   31 function: _TYPE _ID $@8 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 28

    $default  reduce using rule 32 (parameter)

    parameter  go to state 29


stanje 25

   14 attribute: _TYPE _ID . $@5 _SEMICOLON

    $default  reduce using rule 13 ($@5)

    $@5  go to state 30


stanje 26

   21 constructor: _ID $@6 . _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list $@7 _RBRACKET

    _LPAREN  shift, and go to state 31


stanje 27

   10 class: _CLASS _ID $@3 _LBRACKET attributes_list constructor $@4 . functions_list _RBRACKET

    _TYPE  shift, and go to state 12

    $default  reduce using rule 15 (functions_list)

    functions_list  go to state 32
    function_list   go to state 33
    function        go to state 14


stanje 28

   33 parameter: _TYPE . _ID

    _ID  shift, and go to state 34


stanje 29

   31 function: _TYPE _ID $@8 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 35


stanje 30

   14 attribute: _TYPE _ID $@5 . _SEMICOLON

    _SEMICOLON  shift, and go to state 36


stanje 31

   21 constructor: _ID $@6 _LPAREN . constructor_parameters _RPAREN _LBRACKET attribute_assign_list $@7 _RBRACKET

    _TYPE  shift, and go to state 37

    $default  reduce using rule 22 (constructor_parameters)

    constructor_parameters           go to state 38
    constructor_existing_parameters  go to state 39
    constructor_parameter            go to state 40


stanje 32

   10 class: _CLASS _ID $@3 _LBRACKET attributes_list constructor $@4 functions_list . _RBRACKET

    _RBRACKET  shift, and go to state 41


stanje 33

   16 functions_list: function_list .
   18 function_list: function_list . function

    _TYPE  shift, and go to state 12

    $default  reduce using rule 16 (functions_list)

    function  go to state 17


stanje 34

   33 parameter: _TYPE _ID .

    $default  reduce using rule 33 (parameter)


stanje 35

   31 function: _TYPE _ID $@8 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 42

    body  go to state 43


stanje 36

   14 attribute: _TYPE _ID $@5 _SEMICOLON .

    $default  reduce using rule 14 (attribute)


stanje 37

   26 constructor_parameter: _TYPE . _ID

    _ID  shift, and go to state 44


stanje 38

   21 constructor: _ID $@6 _LPAREN constructor_parameters . _RPAREN _LBRACKET attribute_assign_list $@7 _RBRACKET

    _RPAREN  shift, and go to state 45


stanje 39

   23 constructor_parameters: constructor_existing_parameters .
   25 constructor_existing_parameters: constructor_existing_parameters . _COMMA constructor_parameter

    _COMMA  shift, and go to state 46

    $default  reduce using rule 23 (constructor_parameters)


stanje 40

   24 constructor_existing_parameters: constructor_parameter .

    $default  reduce using rule 24 (constructor_existing_parameters)


stanje 41

   10 class: _CLASS _ID $@3 _LBRACKET attributes_list constructor $@4 functions_list _RBRACKET .

    $default  reduce using rule 10 (class)


stanje 42

   35 body: _LBRACKET . variable_list $@9 statement_list _RBRACKET

    $default  reduce using rule 36 (variable_list)

    variable_list  go to state 47


stanje 43

   31 function: _TYPE _ID $@8 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 31 (function)


stanje 44

   26 constructor_parameter: _TYPE _ID .

    $default  reduce using rule 26 (constructor_parameter)


stanje 45

   21 constructor: _ID $@6 _LPAREN constructor_parameters _RPAREN . _LBRACKET attribute_assign_list $@7 _RBRACKET

    _LBRACKET  shift, and go to state 48


stanje 46

   25 constructor_existing_parameters: constructor_existing_parameters _COMMA . constructor_parameter

    _TYPE  shift, and go to state 37

    constructor_parameter  go to state 49


stanje 47

   35 body: _LBRACKET variable_list . $@9 statement_list _RBRACKET
   37 variable_list: variable_list . variable

    _TYPE  shift, and go to state 50

    $default  reduce using rule 34 ($@9)

    $@9       go to state 51
    variable  go to state 52


stanje 48

   21 constructor: _ID $@6 _LPAREN constructor_parameters _RPAREN _LBRACKET . attribute_assign_list $@7 _RBRACKET

    $default  reduce using rule 27 (attribute_assign_list)

    attribute_assign_list  go to state 53


stanje 49

   25 constructor_existing_parameters: constructor_existing_parameters _COMMA constructor_parameter .

    $default  reduce using rule 25 (constructor_existing_parameters)


stanje 50

   38 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 54


stanje 51

   35 body: _LBRACKET variable_list $@9 . statement_list _RBRACKET

    $default  reduce using rule 39 (statement_list)

    statement_list  go to state 55


stanje 52

   37 variable_list: variable_list variable .

    $default  reduce using rule 37 (variable_list)


stanje 53

   21 constructor: _ID $@6 _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list . $@7 _RBRACKET
   28 attribute_assign_list: attribute_assign_list . attribute_assign

    _ID  shift, and go to state 56

    $default  reduce using rule 20 ($@7)

    $@7               go to state 57
    attribute_assign  go to state 58


stanje 54

   38 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 59


stanje 55

   35 body: _LBRACKET variable_list $@9 statement_list . _RBRACKET
   40 statement_list: statement_list . statement

    _IF        shift, and go to state 60
    _RETURN    shift, and go to state 61
    _CLASS     shift, and go to state 62
    _ID        shift, and go to state 63
    _LBRACKET  shift, and go to state 64
    _RBRACKET  shift, and go to state 65

    statement             go to state 66
    class_declaration     go to state 67
    compound_statement    go to state 68
    assignment_statement  go to state 69
    if_statement          go to state 70
    if_part               go to state 71
    return_statement      go to state 72


stanje 56

   29 attribute_assign: _ID . _ASSIGN _ID _SEMICOLON

    _ASSIGN  shift, and go to state 73


stanje 57

   21 constructor: _ID $@6 _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list $@7 . _RBRACKET

    _RBRACKET  shift, and go to state 74


stanje 58

   28 attribute_assign_list: attribute_assign_list attribute_assign .

    $default  reduce using rule 28 (attribute_assign_list)


stanje 59

   38 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 38 (variable)


stanje 60

   76 if_part: _IF . _LPAREN @16 rel_exp $@17 _RPAREN statement

    _LPAREN  shift, and go to state 75


stanje 61

   78 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 76
    _INT_NUMBER   shift, and go to state 77
    _UINT_NUMBER  shift, and go to state 78
    _LPAREN       shift, and go to state 79

    num_exp        go to state 80
    exp            go to state 81
    literal        go to state 82
    function_call  go to state 83


stanje 62

   51 class_declaration: _CLASS . _ID $@10 _ID $@11 _ASSIGN _NEW _ID $@12 _LPAREN $@13 class_argument_list $@14 _RPAREN _SEMICOLON

    _ID  shift, and go to state 84


stanje 63

   58 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 85


stanje 64

   57 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 39 (statement_list)

    statement_list  go to state 86


stanje 65

   35 body: _LBRACKET variable_list $@9 statement_list _RBRACKET .

    $default  reduce using rule 35 (body)


stanje 66

   40 statement_list: statement_list statement .

    $default  reduce using rule 40 (statement_list)


stanje 67

   44 statement: class_declaration .

    $default  reduce using rule 44 (statement)


stanje 68

   41 statement: compound_statement .

    $default  reduce using rule 41 (statement)


stanje 69

   42 statement: assignment_statement .

    $default  reduce using rule 42 (statement)


stanje 70

   43 statement: if_statement .

    $default  reduce using rule 43 (statement)


stanje 71

   72 if_statement: if_part .
   73             | if_part . _ELSE statement

    _ELSE  shift, and go to state 87

    $default  reduce using rule 72 (if_statement)


stanje 72

   45 statement: return_statement .

    $default  reduce using rule 45 (statement)


stanje 73

   29 attribute_assign: _ID _ASSIGN . _ID _SEMICOLON

    _ID  shift, and go to state 88


stanje 74

   21 constructor: _ID $@6 _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list $@7 _RBRACKET .

    $default  reduce using rule 21 (constructor)


stanje 75

   76 if_part: _IF _LPAREN . @16 rel_exp $@17 _RPAREN statement

    $default  reduce using rule 74 (@16)

    @16  go to state 89


stanje 76

   62 exp: _ID . _DOT function_call
   63    | _ID .
   69 function_call: _ID . $@15 _LPAREN argument _RPAREN

    _DOT  shift, and go to state 90

    _LPAREN   reduce using rule 68 ($@15)
    $default  reduce using rule 63 (exp)

    $@15  go to state 91


stanje 77

   66 literal: _INT_NUMBER .

    $default  reduce using rule 66 (literal)


stanje 78

   67 literal: _UINT_NUMBER .

    $default  reduce using rule 67 (literal)


stanje 79

   65 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 76
    _INT_NUMBER   shift, and go to state 77
    _UINT_NUMBER  shift, and go to state 78
    _LPAREN       shift, and go to state 79

    num_exp        go to state 92
    exp            go to state 81
    literal        go to state 82
    function_call  go to state 83


stanje 80

   60 num_exp: num_exp . _AROP exp
   78 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 93
    _AROP       shift, and go to state 94


stanje 81

   59 num_exp: exp .

    $default  reduce using rule 59 (num_exp)


stanje 82

   61 exp: literal .

    $default  reduce using rule 61 (exp)


stanje 83

   64 exp: function_call .

    $default  reduce using rule 64 (exp)


stanje 84

   51 class_declaration: _CLASS _ID . $@10 _ID $@11 _ASSIGN _NEW _ID $@12 _LPAREN $@13 class_argument_list $@14 _RPAREN _SEMICOLON

    $default  reduce using rule 46 ($@10)

    $@10  go to state 95


stanje 85

   58 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 76
    _INT_NUMBER   shift, and go to state 77
    _UINT_NUMBER  shift, and go to state 78
    _LPAREN       shift, and go to state 79

    num_exp        go to state 96
    exp            go to state 81
    literal        go to state 82
    function_call  go to state 83


stanje 86

   40 statement_list: statement_list . statement
   57 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 60
    _RETURN    shift, and go to state 61
    _CLASS     shift, and go to state 62
    _ID        shift, and go to state 63
    _LBRACKET  shift, and go to state 64
    _RBRACKET  shift, and go to state 97

    statement             go to state 66
    class_declaration     go to state 67
    compound_statement    go to state 68
    assignment_statement  go to state 69
    if_statement          go to state 70
    if_part               go to state 71
    return_statement      go to state 72


stanje 87

   73 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 60
    _RETURN    shift, and go to state 61
    _CLASS     shift, and go to state 62
    _ID        shift, and go to state 63
    _LBRACKET  shift, and go to state 64

    statement             go to state 98
    class_declaration     go to state 67
    compound_statement    go to state 68
    assignment_statement  go to state 69
    if_statement          go to state 70
    if_part               go to state 71
    return_statement      go to state 72


stanje 88

   29 attribute_assign: _ID _ASSIGN _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 99


stanje 89

   76 if_part: _IF _LPAREN @16 . rel_exp $@17 _RPAREN statement

    _ID           shift, and go to state 76
    _INT_NUMBER   shift, and go to state 77
    _UINT_NUMBER  shift, and go to state 78
    _LPAREN       shift, and go to state 79

    num_exp        go to state 100
    exp            go to state 81
    literal        go to state 82
    function_call  go to state 83
    rel_exp        go to state 101


stanje 90

   62 exp: _ID _DOT . function_call

    _ID  shift, and go to state 102

    function_call  go to state 103


stanje 91

   69 function_call: _ID $@15 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 104


stanje 92

   60 num_exp: num_exp . _AROP exp
   65 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 105
    _AROP    shift, and go to state 94


stanje 93

   78 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 78 (return_statement)


stanje 94

   60 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 76
    _INT_NUMBER   shift, and go to state 77
    _UINT_NUMBER  shift, and go to state 78
    _LPAREN       shift, and go to state 79

    exp            go to state 106
    literal        go to state 82
    function_call  go to state 83


stanje 95

   51 class_declaration: _CLASS _ID $@10 . _ID $@11 _ASSIGN _NEW _ID $@12 _LPAREN $@13 class_argument_list $@14 _RPAREN _SEMICOLON

    _ID  shift, and go to state 107


stanje 96

   58 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   60 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 108
    _AROP       shift, and go to state 94


stanje 97

   57 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 57 (compound_statement)


stanje 98

   73 if_statement: if_part _ELSE statement .

    $default  reduce using rule 73 (if_statement)


stanje 99

   29 attribute_assign: _ID _ASSIGN _ID _SEMICOLON .

    $default  reduce using rule 29 (attribute_assign)


stanje 100

   60 num_exp: num_exp . _AROP exp
   77 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 94
    _RELOP  shift, and go to state 109


stanje 101

   76 if_part: _IF _LPAREN @16 rel_exp . $@17 _RPAREN statement

    $default  reduce using rule 75 ($@17)

    $@17  go to state 110


stanje 102

   69 function_call: _ID . $@15 _LPAREN argument _RPAREN

    $default  reduce using rule 68 ($@15)

    $@15  go to state 91


stanje 103

   62 exp: _ID _DOT function_call .

    $default  reduce using rule 62 (exp)


stanje 104

   69 function_call: _ID $@15 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 76
    _INT_NUMBER   shift, and go to state 77
    _UINT_NUMBER  shift, and go to state 78
    _LPAREN       shift, and go to state 79

    $default  reduce using rule 70 (argument)

    num_exp        go to state 111
    exp            go to state 81
    literal        go to state 82
    function_call  go to state 83
    argument       go to state 112


stanje 105

   65 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 65 (exp)


stanje 106

   60 num_exp: num_exp _AROP exp .

    $default  reduce using rule 60 (num_exp)


stanje 107

   51 class_declaration: _CLASS _ID $@10 _ID . $@11 _ASSIGN _NEW _ID $@12 _LPAREN $@13 class_argument_list $@14 _RPAREN _SEMICOLON

    $default  reduce using rule 47 ($@11)

    $@11  go to state 113


stanje 108

   58 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 58 (assignment_statement)


stanje 109

   77 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 76
    _INT_NUMBER   shift, and go to state 77
    _UINT_NUMBER  shift, and go to state 78
    _LPAREN       shift, and go to state 79

    num_exp        go to state 114
    exp            go to state 81
    literal        go to state 82
    function_call  go to state 83


stanje 110

   76 if_part: _IF _LPAREN @16 rel_exp $@17 . _RPAREN statement

    _RPAREN  shift, and go to state 115


stanje 111

   60 num_exp: num_exp . _AROP exp
   71 argument: num_exp .

    _AROP  shift, and go to state 94

    $default  reduce using rule 71 (argument)


stanje 112

   69 function_call: _ID $@15 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 116


stanje 113

   51 class_declaration: _CLASS _ID $@10 _ID $@11 . _ASSIGN _NEW _ID $@12 _LPAREN $@13 class_argument_list $@14 _RPAREN _SEMICOLON

    _ASSIGN  shift, and go to state 117


stanje 114

   60 num_exp: num_exp . _AROP exp
   77 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 94

    $default  reduce using rule 77 (rel_exp)


stanje 115

   76 if_part: _IF _LPAREN @16 rel_exp $@17 _RPAREN . statement

    _IF        shift, and go to state 60
    _RETURN    shift, and go to state 61
    _CLASS     shift, and go to state 62
    _ID        shift, and go to state 63
    _LBRACKET  shift, and go to state 64

    statement             go to state 118
    class_declaration     go to state 67
    compound_statement    go to state 68
    assignment_statement  go to state 69
    if_statement          go to state 70
    if_part               go to state 71
    return_statement      go to state 72


stanje 116

   69 function_call: _ID $@15 _LPAREN argument _RPAREN .

    $default  reduce using rule 69 (function_call)


stanje 117

   51 class_declaration: _CLASS _ID $@10 _ID $@11 _ASSIGN . _NEW _ID $@12 _LPAREN $@13 class_argument_list $@14 _RPAREN _SEMICOLON

    _NEW  shift, and go to state 119


stanje 118

   76 if_part: _IF _LPAREN @16 rel_exp $@17 _RPAREN statement .

    $default  reduce using rule 76 (if_part)


stanje 119

   51 class_declaration: _CLASS _ID $@10 _ID $@11 _ASSIGN _NEW . _ID $@12 _LPAREN $@13 class_argument_list $@14 _RPAREN _SEMICOLON

    _ID  shift, and go to state 120


stanje 120

   51 class_declaration: _CLASS _ID $@10 _ID $@11 _ASSIGN _NEW _ID . $@12 _LPAREN $@13 class_argument_list $@14 _RPAREN _SEMICOLON

    $default  reduce using rule 48 ($@12)

    $@12  go to state 121


stanje 121

   51 class_declaration: _CLASS _ID $@10 _ID $@11 _ASSIGN _NEW _ID $@12 . _LPAREN $@13 class_argument_list $@14 _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 122


stanje 122

   51 class_declaration: _CLASS _ID $@10 _ID $@11 _ASSIGN _NEW _ID $@12 _LPAREN . $@13 class_argument_list $@14 _RPAREN _SEMICOLON

    $default  reduce using rule 49 ($@13)

    $@13  go to state 123


stanje 123

   51 class_declaration: _CLASS _ID $@10 _ID $@11 _ASSIGN _NEW _ID $@12 _LPAREN $@13 . class_argument_list $@14 _RPAREN _SEMICOLON

    _ID           shift, and go to state 76
    _INT_NUMBER   shift, and go to state 77
    _UINT_NUMBER  shift, and go to state 78
    _LPAREN       shift, and go to state 79

    $default  reduce using rule 52 (class_argument_list)

    class_argument_list  go to state 124
    class_arguments      go to state 125
    class_argument       go to state 126
    num_exp              go to state 127
    exp                  go to state 81
    literal              go to state 82
    function_call        go to state 83


stanje 124

   51 class_declaration: _CLASS _ID $@10 _ID $@11 _ASSIGN _NEW _ID $@12 _LPAREN $@13 class_argument_list . $@14 _RPAREN _SEMICOLON

    $default  reduce using rule 50 ($@14)

    $@14  go to state 128


stanje 125

   53 class_argument_list: class_arguments .
   55 class_arguments: class_arguments . _COMMA class_argument

    _COMMA  shift, and go to state 129

    $default  reduce using rule 53 (class_argument_list)


stanje 126

   54 class_arguments: class_argument .

    $default  reduce using rule 54 (class_arguments)


stanje 127

   56 class_argument: num_exp .
   60 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 94

    $default  reduce using rule 56 (class_argument)


stanje 128

   51 class_declaration: _CLASS _ID $@10 _ID $@11 _ASSIGN _NEW _ID $@12 _LPAREN $@13 class_argument_list $@14 . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 130


stanje 129

   55 class_arguments: class_arguments _COMMA . class_argument

    _ID           shift, and go to state 76
    _INT_NUMBER   shift, and go to state 77
    _UINT_NUMBER  shift, and go to state 78
    _LPAREN       shift, and go to state 79

    class_argument  go to state 131
    num_exp         go to state 127
    exp             go to state 81
    literal         go to state 82
    function_call   go to state 83


stanje 130

   51 class_declaration: _CLASS _ID $@10 _ID $@11 _ASSIGN _NEW _ID $@12 _LPAREN $@13 class_argument_list $@14 _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 132


stanje 131

   55 class_arguments: class_arguments _COMMA class_argument .

    $default  reduce using rule 55 (class_arguments)


stanje 132

   51 class_declaration: _CLASS _ID $@10 _ID $@11 _ASSIGN _NEW _ID $@12 _LPAREN $@13 class_argument_list $@14 _RPAREN _SEMICOLON .

    $default  reduce using rule 51 (class_declaration)
