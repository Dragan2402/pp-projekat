Gramatika

    0 $accept: program $end

    1 $@1: /* prazno */

    2 program: classes_list $@1 function_list

    3 classes_list: /* prazno */
    4             | classes_existing_list

    5 classes_existing_list: class
    6                      | classes_existing_list class

    7 $@2: /* prazno */

    8 class: _CLASS _ID _LBRACKET attributes_list constructor $@2 function_list _RBRACKET

    9 attributes_list: /* prazno */
   10                | attributes_list attribute

   11 attribute: _TYPE _ID _SEMICOLON

   12 function_list: function
   13              | function_list function

   14 constructor: _ID _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list _RBRACKET

   15 constructor_parameters: /* prazno */
   16                       | constructor_existing_parameters

   17 constructor_existing_parameters: constructor_parameter
   18                                | constructor_existing_parameters _COMMA constructor_parameter

   19 constructor_parameter: _TYPE _ID

   20 attribute_assign_list: /* prazno */
   21                      | attribute_assign_list attribute_assign

   22 attribute_assign: _ID _ASSIGN _ID _SEMICOLON

   23 $@3: /* prazno */

   24 function: _TYPE _ID $@3 _LPAREN parameter _RPAREN body

   25 parameter: /* prazno */
   26          | _TYPE _ID

   27 $@4: /* prazno */

   28 body: _LBRACKET variable_list $@4 statement_list _RBRACKET

   29 variable_list: /* prazno */
   30              | variable_list variable

   31 variable: _TYPE _ID _SEMICOLON

   32 statement_list: /* prazno */
   33               | statement_list statement

   34 statement: compound_statement
   35          | assignment_statement
   36          | if_statement
   37          | return_statement

   38 compound_statement: _LBRACKET statement_list _RBRACKET

   39 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   40 num_exp: exp
   41        | num_exp _AROP exp

   42 exp: literal
   43    | _ID
   44    | function_call
   45    | _LPAREN num_exp _RPAREN

   46 literal: _INT_NUMBER
   47        | _UINT_NUMBER

   48 $@5: /* prazno */

   49 function_call: _ID $@5 _LPAREN argument _RPAREN

   50 argument: /* prazno */
   51         | num_exp

   52 if_statement: if_part
   53             | if_part _ELSE statement

   54 @6: /* prazno */

   55 $@7: /* prazno */

   56 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN statement

   57 rel_exp: num_exp _RELOP num_exp

   58 return_statement: _RETURN num_exp _SEMICOLON


Završni znakovi, sa pravilima gdje se pojavljuju

$end (0) 0
error (256)
_TYPE (258) 11 19 24 26 31
_IF (259) 56
_ELSE (260) 53
_RETURN (261) 58
_CLASS (262) 8
_ID (263) 8 11 14 19 22 24 26 31 39 43 49
_INT_NUMBER (264) 46
_UINT_NUMBER (265) 47
_LPAREN (266) 14 24 45 49 56
_RPAREN (267) 14 24 45 49 56
_LBRACKET (268) 8 14 28 38
_RBRACKET (269) 8 14 28 38
_ASSIGN (270) 22 39
_SEMICOLON (271) 11 22 31 39 58
_COMMA (272) 18
_AROP (273) 41
_RELOP (274) 57
ONLY_IF (275)


Nezavršni znakovi, sa pravilima gdje se pojavljuju

$accept (21)
   s lijeva: 0
program (22)
   s lijeva: 2,s desna: 0
$@1 (23)
   s lijeva: 1,s desna: 2
classes_list (24)
   s lijeva: 3 4,s desna: 2
classes_existing_list (25)
   s lijeva: 5 6,s desna: 4 6
class (26)
   s lijeva: 8,s desna: 5 6
$@2 (27)
   s lijeva: 7,s desna: 8
attributes_list (28)
   s lijeva: 9 10,s desna: 8 10
attribute (29)
   s lijeva: 11,s desna: 10
function_list (30)
   s lijeva: 12 13,s desna: 2 8 13
constructor (31)
   s lijeva: 14,s desna: 8
constructor_parameters (32)
   s lijeva: 15 16,s desna: 14
constructor_existing_parameters (33)
   s lijeva: 17 18,s desna: 16 18
constructor_parameter (34)
   s lijeva: 19,s desna: 17 18
attribute_assign_list (35)
   s lijeva: 20 21,s desna: 14 21
attribute_assign (36)
   s lijeva: 22,s desna: 21
function (37)
   s lijeva: 24,s desna: 12 13
$@3 (38)
   s lijeva: 23,s desna: 24
parameter (39)
   s lijeva: 25 26,s desna: 24
body (40)
   s lijeva: 28,s desna: 24
$@4 (41)
   s lijeva: 27,s desna: 28
variable_list (42)
   s lijeva: 29 30,s desna: 28 30
variable (43)
   s lijeva: 31,s desna: 30
statement_list (44)
   s lijeva: 32 33,s desna: 28 33 38
statement (45)
   s lijeva: 34 35 36 37,s desna: 33 53 56
compound_statement (46)
   s lijeva: 38,s desna: 34
assignment_statement (47)
   s lijeva: 39,s desna: 35
num_exp (48)
   s lijeva: 40 41,s desna: 39 41 45 51 57 58
exp (49)
   s lijeva: 42 43 44 45,s desna: 40 41
literal (50)
   s lijeva: 46 47,s desna: 42
function_call (51)
   s lijeva: 49,s desna: 44
$@5 (52)
   s lijeva: 48,s desna: 49
argument (53)
   s lijeva: 50 51,s desna: 49
if_statement (54)
   s lijeva: 52 53,s desna: 36
if_part (55)
   s lijeva: 56,s desna: 52 53
@6 (56)
   s lijeva: 54,s desna: 56
$@7 (57)
   s lijeva: 55,s desna: 56
rel_exp (58)
   s lijeva: 57,s desna: 56
return_statement (59)
   s lijeva: 58,s desna: 37


stanje 0

    0 $accept: . program $end

    _CLASS  shift, and go to state 1

    $default  reduce using rule 3 (classes_list)

    program                go to state 2
    classes_list           go to state 3
    classes_existing_list  go to state 4
    class                  go to state 5


stanje 1

    8 class: _CLASS . _ID _LBRACKET attributes_list constructor $@2 function_list _RBRACKET

    _ID  shift, and go to state 6


stanje 2

    0 $accept: program . $end

    $end  shift, and go to state 7


stanje 3

    2 program: classes_list . $@1 function_list

    $default  reduce using rule 1 ($@1)

    $@1  go to state 8


stanje 4

    4 classes_list: classes_existing_list .
    6 classes_existing_list: classes_existing_list . class

    _CLASS  shift, and go to state 1

    $default  reduce using rule 4 (classes_list)

    class  go to state 9


stanje 5

    5 classes_existing_list: class .

    $default  reduce using rule 5 (classes_existing_list)


stanje 6

    8 class: _CLASS _ID . _LBRACKET attributes_list constructor $@2 function_list _RBRACKET

    _LBRACKET  shift, and go to state 10


stanje 7

    0 $accept: program $end .

    $default  accept


stanje 8

    2 program: classes_list $@1 . function_list

    _TYPE  shift, and go to state 11

    function_list  go to state 12
    function       go to state 13


stanje 9

    6 classes_existing_list: classes_existing_list class .

    $default  reduce using rule 6 (classes_existing_list)


stanje 10

    8 class: _CLASS _ID _LBRACKET . attributes_list constructor $@2 function_list _RBRACKET

    $default  reduce using rule 9 (attributes_list)

    attributes_list  go to state 14


stanje 11

   24 function: _TYPE . _ID $@3 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 15


stanje 12

    2 program: classes_list $@1 function_list .
   13 function_list: function_list . function

    _TYPE  shift, and go to state 11

    $default  reduce using rule 2 (program)

    function  go to state 16


stanje 13

   12 function_list: function .

    $default  reduce using rule 12 (function_list)


stanje 14

    8 class: _CLASS _ID _LBRACKET attributes_list . constructor $@2 function_list _RBRACKET
   10 attributes_list: attributes_list . attribute

    _TYPE  shift, and go to state 17
    _ID    shift, and go to state 18

    attribute    go to state 19
    constructor  go to state 20


stanje 15

   24 function: _TYPE _ID . $@3 _LPAREN parameter _RPAREN body

    $default  reduce using rule 23 ($@3)

    $@3  go to state 21


stanje 16

   13 function_list: function_list function .

    $default  reduce using rule 13 (function_list)


stanje 17

   11 attribute: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 22


stanje 18

   14 constructor: _ID . _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list _RBRACKET

    _LPAREN  shift, and go to state 23


stanje 19

   10 attributes_list: attributes_list attribute .

    $default  reduce using rule 10 (attributes_list)


stanje 20

    8 class: _CLASS _ID _LBRACKET attributes_list constructor . $@2 function_list _RBRACKET

    $default  reduce using rule 7 ($@2)

    $@2  go to state 24


stanje 21

   24 function: _TYPE _ID $@3 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 25


stanje 22

   11 attribute: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 26


stanje 23

   14 constructor: _ID _LPAREN . constructor_parameters _RPAREN _LBRACKET attribute_assign_list _RBRACKET

    _TYPE  shift, and go to state 27

    $default  reduce using rule 15 (constructor_parameters)

    constructor_parameters           go to state 28
    constructor_existing_parameters  go to state 29
    constructor_parameter            go to state 30


stanje 24

    8 class: _CLASS _ID _LBRACKET attributes_list constructor $@2 . function_list _RBRACKET

    _TYPE  shift, and go to state 11

    function_list  go to state 31
    function       go to state 13


stanje 25

   24 function: _TYPE _ID $@3 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 32

    $default  reduce using rule 25 (parameter)

    parameter  go to state 33


stanje 26

   11 attribute: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 11 (attribute)


stanje 27

   19 constructor_parameter: _TYPE . _ID

    _ID  shift, and go to state 34


stanje 28

   14 constructor: _ID _LPAREN constructor_parameters . _RPAREN _LBRACKET attribute_assign_list _RBRACKET

    _RPAREN  shift, and go to state 35


stanje 29

   16 constructor_parameters: constructor_existing_parameters .
   18 constructor_existing_parameters: constructor_existing_parameters . _COMMA constructor_parameter

    _COMMA  shift, and go to state 36

    $default  reduce using rule 16 (constructor_parameters)


stanje 30

   17 constructor_existing_parameters: constructor_parameter .

    $default  reduce using rule 17 (constructor_existing_parameters)


stanje 31

    8 class: _CLASS _ID _LBRACKET attributes_list constructor $@2 function_list . _RBRACKET
   13 function_list: function_list . function

    _TYPE      shift, and go to state 11
    _RBRACKET  shift, and go to state 37

    function  go to state 16


stanje 32

   26 parameter: _TYPE . _ID

    _ID  shift, and go to state 38


stanje 33

   24 function: _TYPE _ID $@3 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 39


stanje 34

   19 constructor_parameter: _TYPE _ID .

    $default  reduce using rule 19 (constructor_parameter)


stanje 35

   14 constructor: _ID _LPAREN constructor_parameters _RPAREN . _LBRACKET attribute_assign_list _RBRACKET

    _LBRACKET  shift, and go to state 40


stanje 36

   18 constructor_existing_parameters: constructor_existing_parameters _COMMA . constructor_parameter

    _TYPE  shift, and go to state 27

    constructor_parameter  go to state 41


stanje 37

    8 class: _CLASS _ID _LBRACKET attributes_list constructor $@2 function_list _RBRACKET .

    $default  reduce using rule 8 (class)


stanje 38

   26 parameter: _TYPE _ID .

    $default  reduce using rule 26 (parameter)


stanje 39

   24 function: _TYPE _ID $@3 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 42

    body  go to state 43


stanje 40

   14 constructor: _ID _LPAREN constructor_parameters _RPAREN _LBRACKET . attribute_assign_list _RBRACKET

    $default  reduce using rule 20 (attribute_assign_list)

    attribute_assign_list  go to state 44


stanje 41

   18 constructor_existing_parameters: constructor_existing_parameters _COMMA constructor_parameter .

    $default  reduce using rule 18 (constructor_existing_parameters)


stanje 42

   28 body: _LBRACKET . variable_list $@4 statement_list _RBRACKET

    $default  reduce using rule 29 (variable_list)

    variable_list  go to state 45


stanje 43

   24 function: _TYPE _ID $@3 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 24 (function)


stanje 44

   14 constructor: _ID _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list . _RBRACKET
   21 attribute_assign_list: attribute_assign_list . attribute_assign

    _ID        shift, and go to state 46
    _RBRACKET  shift, and go to state 47

    attribute_assign  go to state 48


stanje 45

   28 body: _LBRACKET variable_list . $@4 statement_list _RBRACKET
   30 variable_list: variable_list . variable

    _TYPE  shift, and go to state 49

    $default  reduce using rule 27 ($@4)

    $@4       go to state 50
    variable  go to state 51


stanje 46

   22 attribute_assign: _ID . _ASSIGN _ID _SEMICOLON

    _ASSIGN  shift, and go to state 52


stanje 47

   14 constructor: _ID _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list _RBRACKET .

    $default  reduce using rule 14 (constructor)


stanje 48

   21 attribute_assign_list: attribute_assign_list attribute_assign .

    $default  reduce using rule 21 (attribute_assign_list)


stanje 49

   31 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 53


stanje 50

   28 body: _LBRACKET variable_list $@4 . statement_list _RBRACKET

    $default  reduce using rule 32 (statement_list)

    statement_list  go to state 54


stanje 51

   30 variable_list: variable_list variable .

    $default  reduce using rule 30 (variable_list)


stanje 52

   22 attribute_assign: _ID _ASSIGN . _ID _SEMICOLON

    _ID  shift, and go to state 55


stanje 53

   31 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 56


stanje 54

   28 body: _LBRACKET variable_list $@4 statement_list . _RBRACKET
   33 statement_list: statement_list . statement

    _IF        shift, and go to state 57
    _RETURN    shift, and go to state 58
    _ID        shift, and go to state 59
    _LBRACKET  shift, and go to state 60
    _RBRACKET  shift, and go to state 61

    statement             go to state 62
    compound_statement    go to state 63
    assignment_statement  go to state 64
    if_statement          go to state 65
    if_part               go to state 66
    return_statement      go to state 67


stanje 55

   22 attribute_assign: _ID _ASSIGN _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 68


stanje 56

   31 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 31 (variable)


stanje 57

   56 if_part: _IF . _LPAREN @6 rel_exp $@7 _RPAREN statement

    _LPAREN  shift, and go to state 69


stanje 58

   58 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 70
    _INT_NUMBER   shift, and go to state 71
    _UINT_NUMBER  shift, and go to state 72
    _LPAREN       shift, and go to state 73

    num_exp        go to state 74
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77


stanje 59

   39 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 78


stanje 60

   38 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 32 (statement_list)

    statement_list  go to state 79


stanje 61

   28 body: _LBRACKET variable_list $@4 statement_list _RBRACKET .

    $default  reduce using rule 28 (body)


stanje 62

   33 statement_list: statement_list statement .

    $default  reduce using rule 33 (statement_list)


stanje 63

   34 statement: compound_statement .

    $default  reduce using rule 34 (statement)


stanje 64

   35 statement: assignment_statement .

    $default  reduce using rule 35 (statement)


stanje 65

   36 statement: if_statement .

    $default  reduce using rule 36 (statement)


stanje 66

   52 if_statement: if_part .
   53             | if_part . _ELSE statement

    _ELSE  shift, and go to state 80

    $default  reduce using rule 52 (if_statement)


stanje 67

   37 statement: return_statement .

    $default  reduce using rule 37 (statement)


stanje 68

   22 attribute_assign: _ID _ASSIGN _ID _SEMICOLON .

    $default  reduce using rule 22 (attribute_assign)


stanje 69

   56 if_part: _IF _LPAREN . @6 rel_exp $@7 _RPAREN statement

    $default  reduce using rule 54 (@6)

    @6  go to state 81


stanje 70

   43 exp: _ID .
   49 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 48 ($@5)
    $default  reduce using rule 43 (exp)

    $@5  go to state 82


stanje 71

   46 literal: _INT_NUMBER .

    $default  reduce using rule 46 (literal)


stanje 72

   47 literal: _UINT_NUMBER .

    $default  reduce using rule 47 (literal)


stanje 73

   45 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 70
    _INT_NUMBER   shift, and go to state 71
    _UINT_NUMBER  shift, and go to state 72
    _LPAREN       shift, and go to state 73

    num_exp        go to state 83
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77


stanje 74

   41 num_exp: num_exp . _AROP exp
   58 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 84
    _AROP       shift, and go to state 85


stanje 75

   40 num_exp: exp .

    $default  reduce using rule 40 (num_exp)


stanje 76

   42 exp: literal .

    $default  reduce using rule 42 (exp)


stanje 77

   44 exp: function_call .

    $default  reduce using rule 44 (exp)


stanje 78

   39 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 70
    _INT_NUMBER   shift, and go to state 71
    _UINT_NUMBER  shift, and go to state 72
    _LPAREN       shift, and go to state 73

    num_exp        go to state 86
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77


stanje 79

   33 statement_list: statement_list . statement
   38 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 57
    _RETURN    shift, and go to state 58
    _ID        shift, and go to state 59
    _LBRACKET  shift, and go to state 60
    _RBRACKET  shift, and go to state 87

    statement             go to state 62
    compound_statement    go to state 63
    assignment_statement  go to state 64
    if_statement          go to state 65
    if_part               go to state 66
    return_statement      go to state 67


stanje 80

   53 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 57
    _RETURN    shift, and go to state 58
    _ID        shift, and go to state 59
    _LBRACKET  shift, and go to state 60

    statement             go to state 88
    compound_statement    go to state 63
    assignment_statement  go to state 64
    if_statement          go to state 65
    if_part               go to state 66
    return_statement      go to state 67


stanje 81

   56 if_part: _IF _LPAREN @6 . rel_exp $@7 _RPAREN statement

    _ID           shift, and go to state 70
    _INT_NUMBER   shift, and go to state 71
    _UINT_NUMBER  shift, and go to state 72
    _LPAREN       shift, and go to state 73

    num_exp        go to state 89
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77
    rel_exp        go to state 90


stanje 82

   49 function_call: _ID $@5 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 91


stanje 83

   41 num_exp: num_exp . _AROP exp
   45 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 92
    _AROP    shift, and go to state 85


stanje 84

   58 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 58 (return_statement)


stanje 85

   41 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 70
    _INT_NUMBER   shift, and go to state 71
    _UINT_NUMBER  shift, and go to state 72
    _LPAREN       shift, and go to state 73

    exp            go to state 93
    literal        go to state 76
    function_call  go to state 77


stanje 86

   39 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   41 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 94
    _AROP       shift, and go to state 85


stanje 87

   38 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 38 (compound_statement)


stanje 88

   53 if_statement: if_part _ELSE statement .

    $default  reduce using rule 53 (if_statement)


stanje 89

   41 num_exp: num_exp . _AROP exp
   57 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 85
    _RELOP  shift, and go to state 95


stanje 90

   56 if_part: _IF _LPAREN @6 rel_exp . $@7 _RPAREN statement

    $default  reduce using rule 55 ($@7)

    $@7  go to state 96


stanje 91

   49 function_call: _ID $@5 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 70
    _INT_NUMBER   shift, and go to state 71
    _UINT_NUMBER  shift, and go to state 72
    _LPAREN       shift, and go to state 73

    $default  reduce using rule 50 (argument)

    num_exp        go to state 97
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77
    argument       go to state 98


stanje 92

   45 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 45 (exp)


stanje 93

   41 num_exp: num_exp _AROP exp .

    $default  reduce using rule 41 (num_exp)


stanje 94

   39 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 39 (assignment_statement)


stanje 95

   57 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 70
    _INT_NUMBER   shift, and go to state 71
    _UINT_NUMBER  shift, and go to state 72
    _LPAREN       shift, and go to state 73

    num_exp        go to state 99
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77


stanje 96

   56 if_part: _IF _LPAREN @6 rel_exp $@7 . _RPAREN statement

    _RPAREN  shift, and go to state 100


stanje 97

   41 num_exp: num_exp . _AROP exp
   51 argument: num_exp .

    _AROP  shift, and go to state 85

    $default  reduce using rule 51 (argument)


stanje 98

   49 function_call: _ID $@5 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 101


stanje 99

   41 num_exp: num_exp . _AROP exp
   57 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 85

    $default  reduce using rule 57 (rel_exp)


stanje 100

   56 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN . statement

    _IF        shift, and go to state 57
    _RETURN    shift, and go to state 58
    _ID        shift, and go to state 59
    _LBRACKET  shift, and go to state 60

    statement             go to state 102
    compound_statement    go to state 63
    assignment_statement  go to state 64
    if_statement          go to state 65
    if_part               go to state 66
    return_statement      go to state 67


stanje 101

   49 function_call: _ID $@5 _LPAREN argument _RPAREN .

    $default  reduce using rule 49 (function_call)


stanje 102

   56 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN statement .

    $default  reduce using rule 56 (if_part)
