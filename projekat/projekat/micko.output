Gramatika

    0 $accept: program $end

    1 $@1: /* prazno */

    2 program: classes_list $@1 function_list

    3 classes_list: /* prazno */
    4             | classes_existing_list

    5 classes_existing_list: class
    6                      | classes_existing_list class

    7 $@2: /* prazno */

    8 class: _CLASS _ID _LBRACKET attributes_list constructor $@2 functions_list _RBRACKET

    9 attributes_list: /* prazno */
   10                | attributes_list attribute

   11 attribute: _TYPE _ID _SEMICOLON

   12 functions_list: /* prazno */
   13               | function_list

   14 function_list: function
   15              | function_list function

   16 constructor: _ID _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list _RBRACKET

   17 constructor_parameters: /* prazno */
   18                       | constructor_existing_parameters

   19 constructor_existing_parameters: constructor_parameter
   20                                | constructor_existing_parameters _COMMA constructor_parameter

   21 constructor_parameter: _TYPE _ID

   22 attribute_assign_list: /* prazno */
   23                      | attribute_assign_list attribute_assign

   24 attribute_assign: _ID _ASSIGN _ID _SEMICOLON
   25                 | _ID _ASSIGN literal _SEMICOLON

   26 $@3: /* prazno */

   27 function: _TYPE _ID $@3 _LPAREN parameter _RPAREN body

   28 parameter: /* prazno */
   29          | _TYPE _ID

   30 $@4: /* prazno */

   31 body: _LBRACKET variable_list $@4 statement_list _RBRACKET

   32 variable_list: /* prazno */
   33              | variable_list variable

   34 variable: _TYPE _ID _SEMICOLON

   35 statement_list: /* prazno */
   36               | statement_list statement

   37 statement: compound_statement
   38          | assignment_statement
   39          | if_statement
   40          | class_declaration
   41          | return_statement

   42 class_declaration: _CLASS _ID _ID _ASSIGN _NEW _ID _LPAREN class_argument_list _RPAREN _SEMICOLON

   43 class_argument_list: /* prazno */
   44                    | class_arguments

   45 class_arguments: class_argument
   46                | class_arguments _COMMA class_argument

   47 class_argument: num_exp

   48 compound_statement: _LBRACKET statement_list _RBRACKET

   49 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   50 num_exp: exp
   51        | num_exp _AROP exp

   52 exp: literal
   53    | _ID _DOT function_call
   54    | _ID
   55    | function_call
   56    | _LPAREN num_exp _RPAREN

   57 literal: _INT_NUMBER
   58        | _UINT_NUMBER

   59 $@5: /* prazno */

   60 function_call: _ID $@5 _LPAREN argument _RPAREN

   61 argument: /* prazno */
   62         | num_exp

   63 if_statement: if_part
   64             | if_part _ELSE statement

   65 @6: /* prazno */

   66 $@7: /* prazno */

   67 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN statement

   68 rel_exp: num_exp _RELOP num_exp

   69 return_statement: _RETURN num_exp _SEMICOLON


Završni znakovi, sa pravilima gdje se pojavljuju

$end (0) 0
error (256)
_TYPE (258) 11 21 27 29 34
_IF (259) 67
_ELSE (260) 64
_RETURN (261) 69
_CLASS (262) 8 42
_NEW (263) 42
_ID (264) 8 11 16 21 24 25 27 29 34 42 49 53 54 60
_INT_NUMBER (265) 57
_UINT_NUMBER (266) 58
_LPAREN (267) 16 27 42 56 60 67
_RPAREN (268) 16 27 42 56 60 67
_LBRACKET (269) 8 16 31 48
_RBRACKET (270) 8 16 31 48
_ASSIGN (271) 24 25 42 49
_SEMICOLON (272) 11 24 25 34 42 49 69
_DOT (273) 53
_COMMA (274) 20 46
_AROP (275) 51
_RELOP (276) 68
ONLY_IF (277)


Nezavršni znakovi, sa pravilima gdje se pojavljuju

$accept (23)
   s lijeva: 0
program (24)
   s lijeva: 2,s desna: 0
$@1 (25)
   s lijeva: 1,s desna: 2
classes_list (26)
   s lijeva: 3 4,s desna: 2
classes_existing_list (27)
   s lijeva: 5 6,s desna: 4 6
class (28)
   s lijeva: 8,s desna: 5 6
$@2 (29)
   s lijeva: 7,s desna: 8
attributes_list (30)
   s lijeva: 9 10,s desna: 8 10
attribute (31)
   s lijeva: 11,s desna: 10
functions_list (32)
   s lijeva: 12 13,s desna: 8
function_list (33)
   s lijeva: 14 15,s desna: 2 13 15
constructor (34)
   s lijeva: 16,s desna: 8
constructor_parameters (35)
   s lijeva: 17 18,s desna: 16
constructor_existing_parameters (36)
   s lijeva: 19 20,s desna: 18 20
constructor_parameter (37)
   s lijeva: 21,s desna: 19 20
attribute_assign_list (38)
   s lijeva: 22 23,s desna: 16 23
attribute_assign (39)
   s lijeva: 24 25,s desna: 23
function (40)
   s lijeva: 27,s desna: 14 15
$@3 (41)
   s lijeva: 26,s desna: 27
parameter (42)
   s lijeva: 28 29,s desna: 27
body (43)
   s lijeva: 31,s desna: 27
$@4 (44)
   s lijeva: 30,s desna: 31
variable_list (45)
   s lijeva: 32 33,s desna: 31 33
variable (46)
   s lijeva: 34,s desna: 33
statement_list (47)
   s lijeva: 35 36,s desna: 31 36 48
statement (48)
   s lijeva: 37 38 39 40 41,s desna: 36 64 67
class_declaration (49)
   s lijeva: 42,s desna: 40
class_argument_list (50)
   s lijeva: 43 44,s desna: 42
class_arguments (51)
   s lijeva: 45 46,s desna: 44 46
class_argument (52)
   s lijeva: 47,s desna: 45 46
compound_statement (53)
   s lijeva: 48,s desna: 37
assignment_statement (54)
   s lijeva: 49,s desna: 38
num_exp (55)
   s lijeva: 50 51,s desna: 47 49 51 56 62 68 69
exp (56)
   s lijeva: 52 53 54 55 56,s desna: 50 51
literal (57)
   s lijeva: 57 58,s desna: 25 52
function_call (58)
   s lijeva: 60,s desna: 53 55
$@5 (59)
   s lijeva: 59,s desna: 60
argument (60)
   s lijeva: 61 62,s desna: 60
if_statement (61)
   s lijeva: 63 64,s desna: 39
if_part (62)
   s lijeva: 67,s desna: 63 64
@6 (63)
   s lijeva: 65,s desna: 67
$@7 (64)
   s lijeva: 66,s desna: 67
rel_exp (65)
   s lijeva: 68,s desna: 67
return_statement (66)
   s lijeva: 69,s desna: 41


stanje 0

    0 $accept: . program $end

    _CLASS  shift, and go to state 1

    $default  reduce using rule 3 (classes_list)

    program                go to state 2
    classes_list           go to state 3
    classes_existing_list  go to state 4
    class                  go to state 5


stanje 1

    8 class: _CLASS . _ID _LBRACKET attributes_list constructor $@2 functions_list _RBRACKET

    _ID  shift, and go to state 6


stanje 2

    0 $accept: program . $end

    $end  shift, and go to state 7


stanje 3

    2 program: classes_list . $@1 function_list

    $default  reduce using rule 1 ($@1)

    $@1  go to state 8


stanje 4

    4 classes_list: classes_existing_list .
    6 classes_existing_list: classes_existing_list . class

    _CLASS  shift, and go to state 1

    $default  reduce using rule 4 (classes_list)

    class  go to state 9


stanje 5

    5 classes_existing_list: class .

    $default  reduce using rule 5 (classes_existing_list)


stanje 6

    8 class: _CLASS _ID . _LBRACKET attributes_list constructor $@2 functions_list _RBRACKET

    _LBRACKET  shift, and go to state 10


stanje 7

    0 $accept: program $end .

    $default  accept


stanje 8

    2 program: classes_list $@1 . function_list

    _TYPE  shift, and go to state 11

    function_list  go to state 12
    function       go to state 13


stanje 9

    6 classes_existing_list: classes_existing_list class .

    $default  reduce using rule 6 (classes_existing_list)


stanje 10

    8 class: _CLASS _ID _LBRACKET . attributes_list constructor $@2 functions_list _RBRACKET

    $default  reduce using rule 9 (attributes_list)

    attributes_list  go to state 14


stanje 11

   27 function: _TYPE . _ID $@3 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 15


stanje 12

    2 program: classes_list $@1 function_list .
   15 function_list: function_list . function

    _TYPE  shift, and go to state 11

    $default  reduce using rule 2 (program)

    function  go to state 16


stanje 13

   14 function_list: function .

    $default  reduce using rule 14 (function_list)


stanje 14

    8 class: _CLASS _ID _LBRACKET attributes_list . constructor $@2 functions_list _RBRACKET
   10 attributes_list: attributes_list . attribute

    _TYPE  shift, and go to state 17
    _ID    shift, and go to state 18

    attribute    go to state 19
    constructor  go to state 20


stanje 15

   27 function: _TYPE _ID . $@3 _LPAREN parameter _RPAREN body

    $default  reduce using rule 26 ($@3)

    $@3  go to state 21


stanje 16

   15 function_list: function_list function .

    $default  reduce using rule 15 (function_list)


stanje 17

   11 attribute: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 22


stanje 18

   16 constructor: _ID . _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list _RBRACKET

    _LPAREN  shift, and go to state 23


stanje 19

   10 attributes_list: attributes_list attribute .

    $default  reduce using rule 10 (attributes_list)


stanje 20

    8 class: _CLASS _ID _LBRACKET attributes_list constructor . $@2 functions_list _RBRACKET

    $default  reduce using rule 7 ($@2)

    $@2  go to state 24


stanje 21

   27 function: _TYPE _ID $@3 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 25


stanje 22

   11 attribute: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 26


stanje 23

   16 constructor: _ID _LPAREN . constructor_parameters _RPAREN _LBRACKET attribute_assign_list _RBRACKET

    _TYPE  shift, and go to state 27

    $default  reduce using rule 17 (constructor_parameters)

    constructor_parameters           go to state 28
    constructor_existing_parameters  go to state 29
    constructor_parameter            go to state 30


stanje 24

    8 class: _CLASS _ID _LBRACKET attributes_list constructor $@2 . functions_list _RBRACKET

    _TYPE  shift, and go to state 11

    $default  reduce using rule 12 (functions_list)

    functions_list  go to state 31
    function_list   go to state 32
    function        go to state 13


stanje 25

   27 function: _TYPE _ID $@3 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 33

    $default  reduce using rule 28 (parameter)

    parameter  go to state 34


stanje 26

   11 attribute: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 11 (attribute)


stanje 27

   21 constructor_parameter: _TYPE . _ID

    _ID  shift, and go to state 35


stanje 28

   16 constructor: _ID _LPAREN constructor_parameters . _RPAREN _LBRACKET attribute_assign_list _RBRACKET

    _RPAREN  shift, and go to state 36


stanje 29

   18 constructor_parameters: constructor_existing_parameters .
   20 constructor_existing_parameters: constructor_existing_parameters . _COMMA constructor_parameter

    _COMMA  shift, and go to state 37

    $default  reduce using rule 18 (constructor_parameters)


stanje 30

   19 constructor_existing_parameters: constructor_parameter .

    $default  reduce using rule 19 (constructor_existing_parameters)


stanje 31

    8 class: _CLASS _ID _LBRACKET attributes_list constructor $@2 functions_list . _RBRACKET

    _RBRACKET  shift, and go to state 38


stanje 32

   13 functions_list: function_list .
   15 function_list: function_list . function

    _TYPE  shift, and go to state 11

    $default  reduce using rule 13 (functions_list)

    function  go to state 16


stanje 33

   29 parameter: _TYPE . _ID

    _ID  shift, and go to state 39


stanje 34

   27 function: _TYPE _ID $@3 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 40


stanje 35

   21 constructor_parameter: _TYPE _ID .

    $default  reduce using rule 21 (constructor_parameter)


stanje 36

   16 constructor: _ID _LPAREN constructor_parameters _RPAREN . _LBRACKET attribute_assign_list _RBRACKET

    _LBRACKET  shift, and go to state 41


stanje 37

   20 constructor_existing_parameters: constructor_existing_parameters _COMMA . constructor_parameter

    _TYPE  shift, and go to state 27

    constructor_parameter  go to state 42


stanje 38

    8 class: _CLASS _ID _LBRACKET attributes_list constructor $@2 functions_list _RBRACKET .

    $default  reduce using rule 8 (class)


stanje 39

   29 parameter: _TYPE _ID .

    $default  reduce using rule 29 (parameter)


stanje 40

   27 function: _TYPE _ID $@3 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 43

    body  go to state 44


stanje 41

   16 constructor: _ID _LPAREN constructor_parameters _RPAREN _LBRACKET . attribute_assign_list _RBRACKET

    $default  reduce using rule 22 (attribute_assign_list)

    attribute_assign_list  go to state 45


stanje 42

   20 constructor_existing_parameters: constructor_existing_parameters _COMMA constructor_parameter .

    $default  reduce using rule 20 (constructor_existing_parameters)


stanje 43

   31 body: _LBRACKET . variable_list $@4 statement_list _RBRACKET

    $default  reduce using rule 32 (variable_list)

    variable_list  go to state 46


stanje 44

   27 function: _TYPE _ID $@3 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 27 (function)


stanje 45

   16 constructor: _ID _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list . _RBRACKET
   23 attribute_assign_list: attribute_assign_list . attribute_assign

    _ID        shift, and go to state 47
    _RBRACKET  shift, and go to state 48

    attribute_assign  go to state 49


stanje 46

   31 body: _LBRACKET variable_list . $@4 statement_list _RBRACKET
   33 variable_list: variable_list . variable

    _TYPE  shift, and go to state 50

    $default  reduce using rule 30 ($@4)

    $@4       go to state 51
    variable  go to state 52


stanje 47

   24 attribute_assign: _ID . _ASSIGN _ID _SEMICOLON
   25                 | _ID . _ASSIGN literal _SEMICOLON

    _ASSIGN  shift, and go to state 53


stanje 48

   16 constructor: _ID _LPAREN constructor_parameters _RPAREN _LBRACKET attribute_assign_list _RBRACKET .

    $default  reduce using rule 16 (constructor)


stanje 49

   23 attribute_assign_list: attribute_assign_list attribute_assign .

    $default  reduce using rule 23 (attribute_assign_list)


stanje 50

   34 variable: _TYPE . _ID _SEMICOLON

    _ID  shift, and go to state 54


stanje 51

   31 body: _LBRACKET variable_list $@4 . statement_list _RBRACKET

    $default  reduce using rule 35 (statement_list)

    statement_list  go to state 55


stanje 52

   33 variable_list: variable_list variable .

    $default  reduce using rule 33 (variable_list)


stanje 53

   24 attribute_assign: _ID _ASSIGN . _ID _SEMICOLON
   25                 | _ID _ASSIGN . literal _SEMICOLON

    _ID           shift, and go to state 56
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58

    literal  go to state 59


stanje 54

   34 variable: _TYPE _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 60


stanje 55

   31 body: _LBRACKET variable_list $@4 statement_list . _RBRACKET
   36 statement_list: statement_list . statement

    _IF        shift, and go to state 61
    _RETURN    shift, and go to state 62
    _CLASS     shift, and go to state 63
    _ID        shift, and go to state 64
    _LBRACKET  shift, and go to state 65
    _RBRACKET  shift, and go to state 66

    statement             go to state 67
    class_declaration     go to state 68
    compound_statement    go to state 69
    assignment_statement  go to state 70
    if_statement          go to state 71
    if_part               go to state 72
    return_statement      go to state 73


stanje 56

   24 attribute_assign: _ID _ASSIGN _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 74


stanje 57

   57 literal: _INT_NUMBER .

    $default  reduce using rule 57 (literal)


stanje 58

   58 literal: _UINT_NUMBER .

    $default  reduce using rule 58 (literal)


stanje 59

   25 attribute_assign: _ID _ASSIGN literal . _SEMICOLON

    _SEMICOLON  shift, and go to state 75


stanje 60

   34 variable: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 34 (variable)


stanje 61

   67 if_part: _IF . _LPAREN @6 rel_exp $@7 _RPAREN statement

    _LPAREN  shift, and go to state 76


stanje 62

   69 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 77
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 78

    num_exp        go to state 79
    exp            go to state 80
    literal        go to state 81
    function_call  go to state 82


stanje 63

   42 class_declaration: _CLASS . _ID _ID _ASSIGN _NEW _ID _LPAREN class_argument_list _RPAREN _SEMICOLON

    _ID  shift, and go to state 83


stanje 64

   49 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 84


stanje 65

   48 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 35 (statement_list)

    statement_list  go to state 85


stanje 66

   31 body: _LBRACKET variable_list $@4 statement_list _RBRACKET .

    $default  reduce using rule 31 (body)


stanje 67

   36 statement_list: statement_list statement .

    $default  reduce using rule 36 (statement_list)


stanje 68

   40 statement: class_declaration .

    $default  reduce using rule 40 (statement)


stanje 69

   37 statement: compound_statement .

    $default  reduce using rule 37 (statement)


stanje 70

   38 statement: assignment_statement .

    $default  reduce using rule 38 (statement)


stanje 71

   39 statement: if_statement .

    $default  reduce using rule 39 (statement)


stanje 72

   63 if_statement: if_part .
   64             | if_part . _ELSE statement

    _ELSE  shift, and go to state 86

    $default  reduce using rule 63 (if_statement)


stanje 73

   41 statement: return_statement .

    $default  reduce using rule 41 (statement)


stanje 74

   24 attribute_assign: _ID _ASSIGN _ID _SEMICOLON .

    $default  reduce using rule 24 (attribute_assign)


stanje 75

   25 attribute_assign: _ID _ASSIGN literal _SEMICOLON .

    $default  reduce using rule 25 (attribute_assign)


stanje 76

   67 if_part: _IF _LPAREN . @6 rel_exp $@7 _RPAREN statement

    $default  reduce using rule 65 (@6)

    @6  go to state 87


stanje 77

   53 exp: _ID . _DOT function_call
   54    | _ID .
   60 function_call: _ID . $@5 _LPAREN argument _RPAREN

    _DOT  shift, and go to state 88

    _LPAREN   reduce using rule 59 ($@5)
    $default  reduce using rule 54 (exp)

    $@5  go to state 89


stanje 78

   56 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 77
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 78

    num_exp        go to state 90
    exp            go to state 80
    literal        go to state 81
    function_call  go to state 82


stanje 79

   51 num_exp: num_exp . _AROP exp
   69 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 91
    _AROP       shift, and go to state 92


stanje 80

   50 num_exp: exp .

    $default  reduce using rule 50 (num_exp)


stanje 81

   52 exp: literal .

    $default  reduce using rule 52 (exp)


stanje 82

   55 exp: function_call .

    $default  reduce using rule 55 (exp)


stanje 83

   42 class_declaration: _CLASS _ID . _ID _ASSIGN _NEW _ID _LPAREN class_argument_list _RPAREN _SEMICOLON

    _ID  shift, and go to state 93


stanje 84

   49 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 77
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 78

    num_exp        go to state 94
    exp            go to state 80
    literal        go to state 81
    function_call  go to state 82


stanje 85

   36 statement_list: statement_list . statement
   48 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 61
    _RETURN    shift, and go to state 62
    _CLASS     shift, and go to state 63
    _ID        shift, and go to state 64
    _LBRACKET  shift, and go to state 65
    _RBRACKET  shift, and go to state 95

    statement             go to state 67
    class_declaration     go to state 68
    compound_statement    go to state 69
    assignment_statement  go to state 70
    if_statement          go to state 71
    if_part               go to state 72
    return_statement      go to state 73


stanje 86

   64 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 61
    _RETURN    shift, and go to state 62
    _CLASS     shift, and go to state 63
    _ID        shift, and go to state 64
    _LBRACKET  shift, and go to state 65

    statement             go to state 96
    class_declaration     go to state 68
    compound_statement    go to state 69
    assignment_statement  go to state 70
    if_statement          go to state 71
    if_part               go to state 72
    return_statement      go to state 73


stanje 87

   67 if_part: _IF _LPAREN @6 . rel_exp $@7 _RPAREN statement

    _ID           shift, and go to state 77
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 78

    num_exp        go to state 97
    exp            go to state 80
    literal        go to state 81
    function_call  go to state 82
    rel_exp        go to state 98


stanje 88

   53 exp: _ID _DOT . function_call

    _ID  shift, and go to state 99

    function_call  go to state 100


stanje 89

   60 function_call: _ID $@5 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 101


stanje 90

   51 num_exp: num_exp . _AROP exp
   56 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 102
    _AROP    shift, and go to state 92


stanje 91

   69 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 69 (return_statement)


stanje 92

   51 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 77
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 78

    exp            go to state 103
    literal        go to state 81
    function_call  go to state 82


stanje 93

   42 class_declaration: _CLASS _ID _ID . _ASSIGN _NEW _ID _LPAREN class_argument_list _RPAREN _SEMICOLON

    _ASSIGN  shift, and go to state 104


stanje 94

   49 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   51 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 105
    _AROP       shift, and go to state 92


stanje 95

   48 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 48 (compound_statement)


stanje 96

   64 if_statement: if_part _ELSE statement .

    $default  reduce using rule 64 (if_statement)


stanje 97

   51 num_exp: num_exp . _AROP exp
   68 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 92
    _RELOP  shift, and go to state 106


stanje 98

   67 if_part: _IF _LPAREN @6 rel_exp . $@7 _RPAREN statement

    $default  reduce using rule 66 ($@7)

    $@7  go to state 107


stanje 99

   60 function_call: _ID . $@5 _LPAREN argument _RPAREN

    $default  reduce using rule 59 ($@5)

    $@5  go to state 89


stanje 100

   53 exp: _ID _DOT function_call .

    $default  reduce using rule 53 (exp)


stanje 101

   60 function_call: _ID $@5 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 77
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 78

    $default  reduce using rule 61 (argument)

    num_exp        go to state 108
    exp            go to state 80
    literal        go to state 81
    function_call  go to state 82
    argument       go to state 109


stanje 102

   56 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 56 (exp)


stanje 103

   51 num_exp: num_exp _AROP exp .

    $default  reduce using rule 51 (num_exp)


stanje 104

   42 class_declaration: _CLASS _ID _ID _ASSIGN . _NEW _ID _LPAREN class_argument_list _RPAREN _SEMICOLON

    _NEW  shift, and go to state 110


stanje 105

   49 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 49 (assignment_statement)


stanje 106

   68 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 77
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 78

    num_exp        go to state 111
    exp            go to state 80
    literal        go to state 81
    function_call  go to state 82


stanje 107

   67 if_part: _IF _LPAREN @6 rel_exp $@7 . _RPAREN statement

    _RPAREN  shift, and go to state 112


stanje 108

   51 num_exp: num_exp . _AROP exp
   62 argument: num_exp .

    _AROP  shift, and go to state 92

    $default  reduce using rule 62 (argument)


stanje 109

   60 function_call: _ID $@5 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 113


stanje 110

   42 class_declaration: _CLASS _ID _ID _ASSIGN _NEW . _ID _LPAREN class_argument_list _RPAREN _SEMICOLON

    _ID  shift, and go to state 114


stanje 111

   51 num_exp: num_exp . _AROP exp
   68 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 92

    $default  reduce using rule 68 (rel_exp)


stanje 112

   67 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN . statement

    _IF        shift, and go to state 61
    _RETURN    shift, and go to state 62
    _CLASS     shift, and go to state 63
    _ID        shift, and go to state 64
    _LBRACKET  shift, and go to state 65

    statement             go to state 115
    class_declaration     go to state 68
    compound_statement    go to state 69
    assignment_statement  go to state 70
    if_statement          go to state 71
    if_part               go to state 72
    return_statement      go to state 73


stanje 113

   60 function_call: _ID $@5 _LPAREN argument _RPAREN .

    $default  reduce using rule 60 (function_call)


stanje 114

   42 class_declaration: _CLASS _ID _ID _ASSIGN _NEW _ID . _LPAREN class_argument_list _RPAREN _SEMICOLON

    _LPAREN  shift, and go to state 116


stanje 115

   67 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN statement .

    $default  reduce using rule 67 (if_part)


stanje 116

   42 class_declaration: _CLASS _ID _ID _ASSIGN _NEW _ID _LPAREN . class_argument_list _RPAREN _SEMICOLON

    _ID           shift, and go to state 77
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 78

    $default  reduce using rule 43 (class_argument_list)

    class_argument_list  go to state 117
    class_arguments      go to state 118
    class_argument       go to state 119
    num_exp              go to state 120
    exp                  go to state 80
    literal              go to state 81
    function_call        go to state 82


stanje 117

   42 class_declaration: _CLASS _ID _ID _ASSIGN _NEW _ID _LPAREN class_argument_list . _RPAREN _SEMICOLON

    _RPAREN  shift, and go to state 121


stanje 118

   44 class_argument_list: class_arguments .
   46 class_arguments: class_arguments . _COMMA class_argument

    _COMMA  shift, and go to state 122

    $default  reduce using rule 44 (class_argument_list)


stanje 119

   45 class_arguments: class_argument .

    $default  reduce using rule 45 (class_arguments)


stanje 120

   47 class_argument: num_exp .
   51 num_exp: num_exp . _AROP exp

    _AROP  shift, and go to state 92

    $default  reduce using rule 47 (class_argument)


stanje 121

   42 class_declaration: _CLASS _ID _ID _ASSIGN _NEW _ID _LPAREN class_argument_list _RPAREN . _SEMICOLON

    _SEMICOLON  shift, and go to state 123


stanje 122

   46 class_arguments: class_arguments _COMMA . class_argument

    _ID           shift, and go to state 77
    _INT_NUMBER   shift, and go to state 57
    _UINT_NUMBER  shift, and go to state 58
    _LPAREN       shift, and go to state 78

    class_argument  go to state 124
    num_exp         go to state 120
    exp             go to state 80
    literal         go to state 81
    function_call   go to state 82


stanje 123

   42 class_declaration: _CLASS _ID _ID _ASSIGN _NEW _ID _LPAREN class_argument_list _RPAREN _SEMICOLON .

    $default  reduce using rule 42 (class_declaration)


stanje 124

   46 class_arguments: class_arguments _COMMA class_argument .

    $default  reduce using rule 46 (class_arguments)
